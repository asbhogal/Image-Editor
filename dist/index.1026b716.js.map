{"mappings":"AAAA,MAAQA,UAAYC,SAASC,cAAc,eACnCC,cAAgBF,SAASG,iBAAiB,kBAC1CC,WAAaJ,SAASC,cAAc,sBACpCI,YAAcL,SAASC,cAAc,uBACrCK,aAAeN,SAASC,cAAc,iBACtCM,cAAgBP,SAASG,iBAAiB,kBAC1CK,WAAaR,SAASC,cAAc,oBACpCQ,aAAeT,SAASC,cAAc,eACtCS,eAAiBV,SAASC,cAAc,iBACxCU,WAAaX,SAASC,cAAc,aAE5C,IAAQW,WAAkB,IAClBC,WAAkB,IAClBC,UAAkB,EAClBC,UAAkB,EAClBC,OAAkB,EAClBC,eAAkB,EAClBC,aAAkB,EAE1B,MAAMC,aAAe,KAEjBX,WAAWY,MAAMC,OAAc,cAAcT,+DAIJC,6DAG5CC,+DAEuBC,cAEpBP,WAAWY,MAAAE,UAAkB,UAACN,yDAEbC,wDACIC,eAAsB,E,UAEvC,K,IACAK,EAAAxB,UAASyB,MAAc,GACxBD,IACNf,WAAAiB,IAAAC,IAAAC,gBAAAJ,GAEDf,WAAcoB,iBAAkB,aAE5BlB,eAAOmB,QAEH7B,SAASC,cAAc,cAAA6B,UAAmBC,OAAU,UAAO,I,gBAIxDC,SAASC,I,mBAEQ,SAAS,K,SACzBhC,cAAkB,mBAAc6B,UAAAC,OAAA,U,EAChCD,UAAYI,IAAA,U,WAENC,UAASF,EAAKE,UAEP,eAAbF,EAAAG,IACA9B,aAAa+B,IAAK,MAClB/B,aAAYgC,MAAS1B,WAExBP,YAAS8B,UAAc,GAAAvB,eAED,eAAnBqB,EAAaG,IACb9B,aAAa+B,IAAK,MAClB/B,aAAYgC,MAASzB,WAExBR,YAAM8B,UAAA,GAAAtB,eAEgB,cAAnBoB,EAAaG,IACb9B,aAAa+B,IAAK,MAClB/B,aAAYgC,MAASxB,UAExBT,YAAA8B,UAAA,GAAArB,eAENR,aAAA+B,IAAA,MAEG/B,aAAqBgC,MAAAvB,UAEvBV,YAAY8B,UAAe,GAAApB,aAE3B,GAEA,I,mBAMU,K,YAINoB,UAAY,GAAA7B,aAAmBgC,SAGnC,MAAAC,EAAevC,SAAAC,cAAA,mBAClB,eAAAsC,EAAAH,GAAAxB,WAAAN,aAAAgC,MAE+B,eAAnBC,EAASH,GAAUvB,WAAAP,aAAAgC,MAEG,cAAxBC,EAAiBH,GAAetB,UAAAR,aAAAgC,MAEnCvB,UAAYT,aAAKgC,M,cAGP,E,cAONN,SAAAC,I,EAGJL,iBAAe,cAChB,cAAAK,EAAAG,GAAApB,QAAA,GACJ,eAAAiB,EAAAG,GAAApB,QAAA,GAEyB,oBAATiB,EAASG,GAAAnB,eAAA,IAAAA,gBAAA,IACpBC,aAAsB,IAAAA,cAAA,IACtBC,cAAsB,GACtB,I,MAEAqB,YAAoB,KACpB5B,WAAA,IACAC,WAAY,IAEpBC,UAAA,EAEIC,UAAY,EACfC,OAAA,EAEDC,eAAkB,EAEdC,aAAiB,EAGjBhB,cAAY,GAAG2B,QACfV,cAAa,EAObsB,UAAc,KAEd,MAAGC,EAAW1C,SACN2C,cAAgB,UAAUC,EAAKF,EAAAG,WAAA,MAGvCH,EAAII,MAAMtC,WAAgBuC,aAC1BL,EAAIM,OAAUxC,WAAayC,cAK3BL,EAAAvB,OAAa,cAAST,kDAEMC,gDACAC,kDACfC,cAChB6B,EAAAM,UAAAR,EAAAI,MAAA,EAAAJ,EAAAM,OAAA,GAES,IAAVhC,QAAU4B,EAAgB5B,OAACA,OAAUmC,KAAUC,GAAC,KAChDR,EAAAS,MAAapC,eAAiBC,cAC9B0B,EAAAU,UAAe9C,YAAgBkC,EAACI,MAAS,GAAAJ,EAAaM,OAAA,EAAAN,EAAAI,MAAAJ,EAAAM,QACtD,MAAUO,EAACvD,SAAA2C,cAA0B,KACrCY,EAAAC,SAAa,Y","sources":["src/js/script.js"],"sourcesContent":["const   fileInput = document.querySelector(\".file-input\"),\r\n        filterOptions = document.querySelectorAll(\".filter button\"),\r\n        filterName = document.querySelector(\".filter-info .name\"),\r\n        filterValue = document.querySelector(\".filter-info .value\"),\r\n        filterSlider = document.querySelector(\".slider input\"),\r\n        rotateOptions = document.querySelectorAll(\".rotate button\"),\r\n        previewImg = document.querySelector(\".preview-img img\"),\r\n        chooseImgBtn = document.querySelector(\".choose-img\"),\r\n        resetFilterBtn = document.querySelector(\".reset-filter\"),\r\n        saveImgBtn = document.querySelector(\".save-img\");\r\n\r\nlet     brightness      = 100, \r\n        saturation      = 100, \r\n        inversion       = 0, \r\n        grayscale       = 0,\r\n        rotate          = 0,\r\n        flipHorizontal  = 1,\r\n        flipVertical    = 1;\r\n\r\nconst applyFilters = () => {\r\n\r\n    previewImg.style.filter     =  `brightness(${brightness}%) \r\n                                    saturate(${saturation}%) \r\n                                    invert(${inversion}%) \r\n                                    grayscale(${grayscale}%)`;\r\n    previewImg.style.transform  =  `rotate(${rotate}deg)\r\n                                    scale(${flipHorizontal},\r\n                                    ${flipVertical})`;\r\n}\r\n\r\nconst loadImage = () => {\r\n\r\n    let file = fileInput.files[0];\r\n\r\n    if(!file) return;\r\n    previewImg.src = URL.createObjectURL(file);\r\n    previewImg.addEventListener(\"load\", () => {\r\n        resetFilterBtn.click();\r\n        document.querySelector(\".container\").classList.remove(\"disable\");\r\n    });\r\n}\r\n\r\nfilterOptions.forEach(option => {\r\n\r\n    option.addEventListener(\"click\", () => {\r\n        \r\n        document.querySelector(\".filter .active\").classList.remove(\"active\");\r\n        option.classList.add(\"active\");\r\n        filterName.innerText = option.innerText;\r\n\r\n        if(option.id ===\"brightness\") {\r\n\r\n            filterSlider.max = \"200\";\r\n            filterSlider.value = brightness;\r\n            filterValue.innerText = `${brightness}%`;\r\n\r\n        } else if(option.id === \"saturation\") {\r\n\r\n            filterSlider.max = \"200\";\r\n            filterSlider.value = saturation;\r\n            filterValue.innerText = `${saturation}%`;\r\n            \r\n        } else if(option.id === \"inversion\") {\r\n\r\n            filterSlider.max = \"100\";\r\n            filterSlider.value = inversion;\r\n            filterValue.innerText = `${inversion}%`;\r\n\r\n        } else {\r\n\r\n            filterSlider.max = \"100\";\r\n            filterSlider.value = grayscale;\r\n            filterValue.innerText = `${grayscale}%`;\r\n\r\n        }\r\n    });\r\n});\r\n\r\nconst updateFilter = () => {\r\n\r\n    filterValue.innerText = `${filterSlider.value}%`;\r\n\r\n    const selectedFilter = document.querySelector(\".filter .active\");\r\n\r\n    if(selectedFilter.id === \"brightness\") {\r\n        brightness = filterSlider.value;\r\n\r\n    } else if(selectedFilter.id === \"saturation\") {\r\n        saturation = filterSlider.value;\r\n\r\n    } else if(selectedFilter.id === \"inversion\") {\r\n        inversion = filterSlider.value;\r\n\r\n    } else {\r\n        grayscale = filterSlider.value;\r\n    }\r\n\r\n    applyFilters();\r\n}\r\n\r\nrotateOptions.forEach(option => {\r\n\r\n    option.addEventListener(\"click\", () => {\r\n\r\n        if(option.id === \"flip-left\") {\r\n            rotate -= 90;\r\n\r\n        } else if(option.id === \"flip-right\") {\r\n            rotate += 90;\r\n\r\n        } else if(option.id === \"flip-horizontal\") {\r\n            flipHorizontal = flipHorizontal === 1 ? -1 : 1;\r\n\r\n        } else {\r\n            flipVertical = flipVertical === 1 ? -1 : 1;\r\n        }\r\n\r\n        applyFilters();\r\n    });\r\n});\r\n\r\nconst   resetFilter = () => {\r\n        brightness      = 100;\r\n        saturation      = 100;\r\n        inversion       = 0;\r\n        grayscale       = 0;\r\n        rotate          = 0;\r\n        flipHorizontal  = 1;\r\n        flipVertical    = 1;\r\n    \r\nfilterOptions[0].click();\r\n\r\n    applyFilters();\r\n}\r\n\r\nconst saveImage = () => {\r\n\r\n    const   canvas = document.createElement(\"canvas\"),\r\n            ctx = canvas.getContext(\"2d\");\r\n\r\n    canvas.width = previewImg.naturalWidth;\r\n    canvas.height = previewImg.naturalHeight;\r\n\r\n    ctx.filter   =     `brightness(${brightness}%)\r\n                        saturate(${saturation}%)\r\n                        invert(${inversion}%)\r\n                        grayscale(${grayscale}%)`;\r\n\r\n    ctx.translate(canvas.width / 2, canvas.height / 2);\r\n\r\n    if(rotate !== 0) {\r\n        ctx.rotate(rotate * Math.PI / 180);\r\n    }\r\n\r\n    ctx.scale(flipHorizontal, flipVertical);\r\n    ctx.drawImage(previewImg, -canvas.width / 2, \r\n                              -canvas.height / 2, \r\n                               canvas.width, \r\n                               canvas.height);\r\n\r\n    const link = document.createElement(\"a\");\r\n\r\n    link.download = \"image.jpg\";\r\n    link.href = canvas.toDataURL();\r\n    link.click();\r\n}\r\n\r\nfileInput.addEventListener(\"change\", loadImage);\r\nfilterSlider.addEventListener(\"input\", updateFilter);\r\nresetFilterBtn.addEventListener(\"click\", resetFilter);\r\nsaveImgBtn.addEventListener(\"click\", saveImage);\r\nchooseImgBtn.addEventListener(\"click\", () => fileInput.click());"],"names":["fileInput","document","querySelector","filterOptions","querySelectorAll","filterName","filterValue","filterSlider","rotateOptions","previewImg","chooseImgBtn","resetFilterBtn","saveImgBtn","brightness","saturation","inversion","grayscale","rotate","flipHorizontal","flipVertical","applyFilters","style","filter","transform","file","files","src","URL","createObjectURL","addEventListener","click","classList","remove","forEach","option","add","innerText","id","max","value","selectedFilter","resetFilter","saveImage","canvas","createElement","ctx","getContext","width","naturalWidth","height","naturalHeight","translate","Math","PI","scale","drawImage","link","download"],"version":3,"file":"index.1026b716.js.map"}